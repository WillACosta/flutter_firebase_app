import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth_app/features/chat/data/models/models.dart';

import 'chat_repository.dart';

class CChatRepository implements ChatRepository {
  CChatRepository(this._firestore);
  final FirebaseFirestore _firestore;

  @override
  Future<String> createChannel({
    required String createdByUid,
    required List<String> members,
    required String type,
    String? description,
    String? image,
    String? modifiedAt,
  }) async {
    final result = await _firestore.collection('groups').add({
      'createdBy': createdByUid,
      'type': type,
      'createdAt': Timestamp.now().toString(),
      'description': description,
      'image': image,
      'members': members
    });

    /// TODO:
    /// Create a UID for the channel or update item with autogenerated

    final currentChannelId = result.id;
    await updateChannel(currentChannelId);

    return currentChannelId;
  }

  @override
  Stream<List<NetworkChannel>> getChannelsByUserId(String id) {
    return _firestore
        .collection('groups')
        .where('createdBy', isEqualTo: id)
        .snapshots()
        .map(
      (data) {
        return List.from(
          data.docs.map((e) => NetworkChannel.fromMap(e.data())),
        );
      },
    );
  }

  @override
  Stream<List<NetworkMessage>> getMessagesByChatId(String id) {
    return _firestore
        .collection('chats')
        .doc(id)
        .collection('messages')
        .orderBy('sentAt')
        .snapshots()
        .map(
      (data) {
        final documents = data.docs;
        return List.from(
          documents.map((e) => NetworkMessage.fromMap(e.data())),
        );
      },
    );
  }

  @override
  Future<void> sendMessage({
    required String channelId,
    required String sentBy,
    required String messageText,
  }) async {
    final payload = {
      'sentBy': sentBy,
      'sentAt': DateTime.timestamp().toString(),
      'messageText': messageText,
    };

    await _firestore
        .collection('chats')
        .doc(channelId)
        .collection('messages')
        .add(payload);
  }

  Future<void> updateChannel(
    String currentId, {
    String? createdByUid,
    List<String>? members,
    String? type,
    String? description,
    String? image,
    String? modifiedAt,
  }) async {
    _firestore.collection('groups').doc(currentId).set({
      'id': currentId,
      'createdBy': createdByUid,
      'type': type,
      'createdAt': Timestamp.now().toString(),
      'description': description,
      'image': image,
      'members': members
    });
  }
}
